ActiveToc=function(){let e,t,i,o,n;function c(c){let s;if(e=function(e){if("string"==typeof e||e instanceof String)return{tocContainer:e};let t=Object.assign({},e);return t.tocContainer||(t.tocContainer="#header"),t}(c),"string"==typeof e.tocContainer||e.tocContainer instanceof String?s=e.tocContainer:n=e.tocContainer,document.querySelector&&window.IntersectionObserver){if(s&&(n=document.querySelector(s),n||(n=document.querySelector("header")),!n))return void console.error("A toc container with selector=["+s+"] or the tag=<header> could not be found in the document");t=[...n.querySelectorAll("a")],i=[],t.forEach((e=>{let t=e.getAttribute("href");if(t&&t.startsWith("#"))try{i.push(document.querySelector(t))}catch(e){console.warn("Heading with id=["+t+"] not found in document")}})),o=new IntersectionObserver(r,e.intersectionOptions),i.forEach((e=>{e&&o.observe(e)}))}else console.error("ActiveToc cannot run on this device because the Intersection Observer API is not supported")}function s(){i&&i.forEach((e=>{e&&o.unobserve(e)}))}function r(o,c){o.forEach((o=>{!function(i){let o=`#${i.target.getAttribute("id")}`;t.forEach((t=>{t.classList.remove("is-highlight"),t.classList.remove("is-active"),t.getAttribute("href")===o&&(i.isIntersecting?(t.classList.add("is-visible"),e.onVisible&&e.onVisible(t,i)):t.classList.remove("is-visible"))}))}(o),function(t){for(let o=i.length-1;o>=0;o--)if(i[o]&&i[o].offsetTop<=window.pageYOffset){n.querySelectorAll(`a[href="#${i[o].id}"]`).forEach((i=>{i.classList.add("is-active"),e.onActive&&e.onActive(i,t)}));break}}(o),function(i){let o;for(let n of t)n.classList.contains("is-visible")&&(o||(o=n.href),o==n.href&&(n.classList.add("is-highlight"),e.onHighlight&&e.onHighlight(n,i)));if(!o){let t=n.querySelectorAll("a.is-active");t.forEach((t=>{t.classList.add("is-highlight"),e.onHighlight&&e.onHighlight(t,i)})),0==t.length&&e.offHighlight&&e.offHighlight()}}(o)}))}return{init:function(e){c(e)},unobserve:function(){s()},destroy:function(){s(),t&&t.forEach((e=>{e.classList.remove("is-visible"),e.classList.remove("is-active"),e.classList.remove("is-highlight")}))}}}();try{module&&(module.exports={init:function(e){this.activeToc||(this.activeToc=ActiveToc),this.activeToc.init(e)},destroy:function(){this.activeToc&&this.activeToc.destroy()},unobserve:function(){this.activeToc&&this.activeToc.unobserve()}})}catch(e){console.log("Using ActiveToc in non-node environment")}
